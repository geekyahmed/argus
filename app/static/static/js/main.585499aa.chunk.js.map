{"version":3,"sources":["socket/index.js","App.js","reportWebVitals.js","index.js"],"names":["SocketContext","createContext","socket","io","window","location","origin","path","on","console","log","SocketContextProvider","children","Provider","value","App","useContext","useState","logs","setLogs","isLoading","setIsLoading","drawerStatus","setDrawerStatus","singleLogData","setSingleLogData","positiveStatus","TabPane","Tabs","logId","a","fetch","pathname","json","data","handleDrawerStatus","useEffect","fetchData","request","response","modifiedPayload","_id","method","status","duration","timestamp","off","tableColumns","title","dataIndex","key","render","className","includes","moment","fromNow","EyeOutlined","onClick","viewLogInfo","Layout","TableWrapper","loading","pagination","position","dataSource","columns","Footer","href","target","rel","CustomDrawer","width","placement","onClose","visible","hostname","ipAddress","url","defaultActiveKey","tab","themeClassName","body","headers","styled","Drawer","div","Table","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"uQAGMA,EAAgBC,0BAEhBC,EAASC,IAAGC,OAAOC,SAASC,OAAQ,CACxCC,KAAM,6BAGRL,EAAOM,GAAG,WAAW,WACnBC,QAAQC,IAAI,2CAGdR,EAAOM,GAAG,cAAc,WACtBC,QAAQC,IAAI,sCAGd,I,QAAMC,EAAwB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/B,OACE,cAACZ,EAAca,SAAf,CAAwBC,MAAO,CAAEZ,UAAjC,SACGU,K,+EC2KQG,MAvLf,WAAgB,IAAD,4BACLb,EAAWc,qBAAWhB,GAAtBE,OADK,EAEWe,mBAAS,IAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGqBF,oBAAS,GAH9B,mBAGNG,EAHM,KAGKC,EAHL,OAI2BJ,oBAAS,GAJpC,mBAINK,EAJM,KAIQC,EAJR,OAK6BN,mBAAS,MALtC,mBAKNO,EALM,KAKSC,EALT,KAMPC,EAAiB,CAAC,IAAK,IAAK,KAE1BC,EAAYC,IAAZD,QARK,4CAyCb,WAA2BE,GAA3B,iBAAAC,EAAA,6DACET,GAAa,GADf,SAIUU,MAAM,GAAD,OAAI3B,OAAOC,SAAS2B,SAApB,oBAAwCH,IAJvD,8BAKII,OALJ,gBAGUC,EAHV,EAGUA,KAIRT,EAAiBS,GACjBb,GAAa,GACbc,IATF,6CAzCa,sBAqDb,SAASA,IACPZ,GAAiBD,GA5CnBc,qBAAU,WAAM,SAgBCC,IAhBD,2EAgBd,8BAAAP,EAAA,sEAEUC,MAAM,GAAD,OAAI3B,OAAOC,SAAS2B,SAApB,aAFf,8BAGIC,OAHJ,gBACUC,EADV,EACUA,KAIRf,EAAQ,YAAIe,IACZb,GAAa,GANf,4CAhBc,sBA0Bd,OAzBAA,GAAa,GACbnB,EAAOM,GAAG,eAAe,SAAC0B,GAAU,IAC1BI,EAAsBJ,EAAtBI,QAASC,EAAaL,EAAbK,SACXC,EAAkB,CACtBX,MAAOK,EAAKO,IACZC,OAAQJ,EAAQI,OAChBnC,KAAM+B,EAAQ/B,KACdoC,OAAQJ,EAASI,OACjBC,SAAUN,EAAQM,SAClBC,UAAWP,EAAQO,WAGrB1B,GAAQ,SAACD,GAAD,OAAWsB,GAAX,mBAA+BtB,UAYzC,sBAAC,sBAAAY,EAAA,sEAAkBO,IAAlB,kFAAD,GACO,WACLnC,EAAO4C,IAAI,kBAEZ,IAkBH,IAAMC,EAAe,CACnB,CACEC,MAAO,OACPC,UAAW,SACXC,IAAK,UAEP,CACEF,MAAO,OACPC,UAAW,OACXC,IAAK,QAEP,CACEF,MAAO,SACPC,UAAW,SACXC,IAAK,SACLC,OAJF,SAISR,GACL,OACE,sBACES,UAAS,gBAAY1B,EAAe2B,SAASV,GAAkB,GAAR,OADzD,SAGGA,MAKT,CACEK,MAAO,WACPC,UAAW,WACXC,IAAK,YAEP,CACEF,MAAO,WACPC,UAAW,YACXC,IAAK,YACLC,OAJF,SAISN,GACL,OAAO,sBAAMO,UAAU,OAAhB,SAAwBE,IAAOT,GAAWU,cAGrD,CACEP,MAAO,WACPC,UAAW,QACXC,IAAK,QACLC,OAJF,SAIStB,GACL,OACE,cAAC2B,EAAA,EAAD,CAAaJ,UAAU,UAAUK,QAAS,kBArGrC,2CAqG2CC,CAAY7B,SAMpE,OACE,eAAC8B,EAAD,WACE,sBAAKP,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,+BACoB,kDAGpB,cAACQ,EAAD,CACEC,QAASzC,EACT0C,WAAY,CAAEC,SAAU,CAAC,iBACzBC,WAAY9C,EACZ+C,QAASlB,OAIb,eAACmB,EAAD,0BACe,IACb,mBACEC,KAAK,yCACLC,OAAO,SACPC,IAAI,aAHN,2BASF,eAACC,EAAD,CACEC,MAAO,IACPvB,MAAM,6BACNwB,UAAW,OACXC,QAAStC,EACTuC,QAASpD,EALX,UAOE,kDAAcE,QAAd,IAAcA,GAAd,UAAcA,EAAec,eAA7B,aAAc,EAAwBqC,YACtC,mDAAenD,QAAf,IAAeA,GAAf,UAAeA,EAAec,eAA9B,aAAe,EAAwBsC,aACvC,gDAAYpD,QAAZ,IAAYA,GAAZ,UAAYA,EAAec,eAA3B,aAAY,EAAwBI,UACpC,wCACU,IACR,sBACEU,UAAS,gBACN1B,EAAe2B,SAAf,OAAwB7B,QAAxB,IAAwBA,GAAxB,UAAwBA,EAAee,gBAAvC,aAAwB,EAAyBI,QAE9C,GADA,OAHR,gBAOGnB,QAPH,IAOGA,GAPH,UAOGA,EAAee,gBAPlB,aAOG,EAAyBI,YAG9B,8CAAUnB,QAAV,IAAUA,GAAV,UAAUA,EAAec,eAAzB,aAAU,EAAwB/B,QAClC,6CAASiB,QAAT,IAASA,GAAT,UAASA,EAAec,eAAxB,aAAS,EAAwBuC,OACjC,oDAAgBrD,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAec,eAA/B,aAAgB,EAAwBM,YACxC,eAAC,IAAD,CAAMkC,iBAAiB,IAAvB,UACE,cAACnD,EAAD,CAASoD,IAAI,UAAb,SACE,cAAC,IAAD,CACEC,eAAe,QACf9C,MAAmB,OAAbV,QAAa,IAAbA,GAAA,UAAAA,EAAec,eAAf,mBAAwB2C,YAAxB,eAA+B,KAAM,MAHpB,KAM3B,cAACtD,EAAD,CAASoD,IAAI,UAAb,SACE,cAAC,IAAD,CACEC,eAAe,QACf9C,MAAmB,OAAbV,QAAa,IAAbA,GAAA,UAAAA,EAAec,eAAf,mBAAwB4C,eAAxB,eAAkC,KAAM,MAHvB,KAM3B,cAACvD,EAAD,CAASoD,IAAI,YAAb,SACE,cAAC,IAAD,CACEC,eAAe,QACf9C,MAAmB,OAAbV,QAAa,IAAbA,GAAA,UAAAA,EAAee,gBAAf,mBAAyB0C,YAAzB,eAAgC,KAAM,MAHnB,eAcjCX,EAAea,YAAOC,IAAPD,CAAH,qmBAiCZjB,EAASiB,IAAOE,IAAV,0MAaN1B,EAASwB,IAAOE,IAAV,s7EAyHNzB,EAAeuB,YAAOG,IAAPH,CAAH,0BC5VHI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAAS7C,OACP,cAAC,IAAM8C,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.585499aa.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io(window.location.origin, {\r\n  path: \"/argus-websocket-server/\",\r\n});\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(\"Websocket conncected to argus server\");\r\n});\r\n\r\nsocket.on(\"disconnect\", () => {\r\n  console.log(\"Disconnecting from argus server\");\r\n});\r\n\r\nconst SocketContextProvider = ({ children }) => {\r\n  return (\r\n    <SocketContext.Provider value={{ socket }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport { SocketContext, SocketContextProvider };\r\n","import { useEffect, useContext, useState } from \"react\";\nimport { SocketContext } from \"./socket\";\nimport styled from \"styled-components\";\nimport { Table, Drawer, Tabs } from \"antd\";\nimport moment from \"moment\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nimport JSONPretty from \"react-json-pretty\";\n\nfunction App() {\n  const { socket } = useContext(SocketContext);\n  const [logs, setLogs] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [drawerStatus, setDrawerStatus] = useState(false);\n  const [singleLogData, setSingleLogData] = useState(null);\n  const positiveStatus = [201, 200, 304];\n\n  const { TabPane } = Tabs;\n\n  useEffect(() => {\n    setIsLoading(true);\n    socket.on(\"new_request\", (data) => {\n      const { request, response } = data;\n      const modifiedPayload = {\n        logId: data._id,\n        method: request.method,\n        path: request.path,\n        status: response.status,\n        duration: request.duration,\n        timestamp: request.timestamp,\n      };\n\n      setLogs((logs) => [modifiedPayload, ...logs]);\n    });\n\n    async function fetchData() {\n      const { data } = await (\n        await fetch(`${window.location.pathname}api/logs`)\n      ).json();\n\n      setLogs([...data]);\n      setIsLoading(false);\n    }\n\n    (async () => await fetchData())();\n    return function () {\n      socket.off(\"new_request\");\n    };\n  }, []);\n\n  async function viewLogInfo(logId) {\n    setIsLoading(true);\n\n    const { data } = await (\n      await fetch(`${window.location.pathname}api/logs/${logId}`)\n    ).json();\n\n    setSingleLogData(data);\n    setIsLoading(false);\n    handleDrawerStatus();\n  }\n\n  function handleDrawerStatus() {\n    setDrawerStatus(!drawerStatus);\n  }\n\n  const tableColumns = [\n    {\n      title: \"VERB\",\n      dataIndex: \"method\",\n      key: \"method\",\n    },\n    {\n      title: \"PATH\",\n      dataIndex: \"path\",\n      key: \"path\",\n    },\n    {\n      title: \"STATUS\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render(status) {\n        return (\n          <span\n            className={`badge ${!positiveStatus.includes(status) ? \"red\" : \"\"}`}\n          >\n            {status}\n          </span>\n        );\n      },\n    },\n    {\n      title: \"DURATION\",\n      dataIndex: \"duration\",\n      key: \"duration\",\n    },\n    {\n      title: \"HAPPENED\",\n      dataIndex: \"timestamp\",\n      key: \"timestamp\",\n      render(timestamp) {\n        return <span className=\"date\">{moment(timestamp).fromNow()}</span>;\n      },\n    },\n    {\n      title: \"VIEW LOG\",\n      dataIndex: \"logId\",\n      key: \"logId\",\n      render(logId) {\n        return (\n          <EyeOutlined className=\"viewLog\" onClick={() => viewLogInfo(logId)} />\n        );\n      },\n    },\n  ];\n\n  return (\n    <Layout>\n      <div className=\"innerWrapper\">\n        <div className=\"liveSection\">\n          Live Monitoring : <button>Connected</button>\n        </div>\n\n        <TableWrapper\n          loading={isLoading}\n          pagination={{ position: [\"bottomCenter\"] }}\n          dataSource={logs}\n          columns={tableColumns}\n        />\n      </div>\n\n      <Footer>\n        Argus Logger{\" \"}\n        <a\n          href=\"https://github.com/iamnasirudeen/argus\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Repository\n        </a>\n      </Footer>\n\n      <CustomDrawer\n        width={450}\n        title=\"Request & Response Details\"\n        placement={\"left\"}\n        onClose={handleDrawerStatus}\n        visible={drawerStatus}\n      >\n        <p>Hostname: {singleLogData?.request?.hostname}</p>\n        <p>Client IP: {singleLogData?.request?.ipAddress}</p>\n        <p>Method: {singleLogData?.request?.method}</p>\n        <p>\n          Status:{\" \"}\n          <span\n            className={`badge ${\n              !positiveStatus.includes(singleLogData?.response?.status)\n                ? \"red\"\n                : \"\"\n            }`}\n          >\n            {singleLogData?.response?.status}\n          </span>\n        </p>\n        <p>Path: {singleLogData?.request?.path}</p>\n        <p>URL: {singleLogData?.request?.url}</p>\n        <p>Time Spent: {singleLogData?.request?.duration}</p>\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"Payload\" key=\"1\">\n            <JSONPretty\n              themeClassName=\"theme\"\n              data={singleLogData?.request?.body?.[0] || {}}\n            ></JSONPretty>\n          </TabPane>\n          <TabPane tab=\"Headers\" key=\"2\">\n            <JSONPretty\n              themeClassName=\"theme\"\n              data={singleLogData?.request?.headers?.[0] || {}}\n            ></JSONPretty>\n          </TabPane>\n          <TabPane tab=\"Responses\" key=\"3\">\n            <JSONPretty\n              themeClassName=\"theme\"\n              data={singleLogData?.response?.body?.[0] || {}}\n            ></JSONPretty>\n          </TabPane>\n        </Tabs>\n      </CustomDrawer>\n    </Layout>\n  );\n}\n\nexport default App;\n\nconst CustomDrawer = styled(Drawer)`\n  font-family: DM Sans;\n  font-weight: bold;\n\n  .theme {\n    padding: 1rem;\n    background: #252526;\n    font-family: Consolas, \"Courier New\", monospace;\n    font-weight: normal;\n    font-size: 13px;\n    font-feature-settings: \"liga\", \"calt\";\n    line-height: 18px;\n    letter-spacing: 0px;\n    color: #d4d4d4;\n    border-radius: 10px;\n\n    .__json-key__ {\n      color: #9cdcfe;\n    }\n\n    .__json-value__ {\n      color: #9cdcfe !important;\n    }\n\n    .__json-string__ {\n      color: #b5cea8;\n    }\n    .__json-boolean__ {\n      color: #569cd6;\n    }\n  }\n`;\n\nconst Footer = styled.div`\n  padding: 1rem;\n  text-align: center;\n  background: #0d1117;\n  color: #fff;\n  font-family: DM Sans;\n\n  a {\n    color: #ffffff;\n    text-decoration: underline;\n  }\n`;\n\nconst Layout = styled.div`\n  background-color: #edf2f7 !important;\n\n  span.badge {\n    padding: 0.2rem 0.5rem 0.2rem 0.5rem;\n    background: #c6f6d5;\n    opacity: 0.5;\n    border-radius: 9999px;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n\n    &.red {\n      color: red !important;\n      background: #fcdbdd !important;\n    }\n  }\n\n  .viewLog {\n    font-size: 20px;\n    color: green;\n    opacity: 0.8;\n  }\n\n  .innerWrapper {\n    padding: 3rem;\n  }\n\n  .liveSection {\n    margin-bottom: 2rem;\n    font-family: DM Sans;\n    font-size: 14px;\n    font-weight: bold !important;\n\n    button {\n      background-color: #48bb78 !important;\n      color: #fff !important;\n      border: none;\n      outline: none;\n      border-radius: 5px;\n      padding: 6px 10px 6px 10px;\n    }\n  }\n\n  ul {\n    background-color: #edf2f7;\n\n    &.ant-pagination.ant-table-pagination.ant-table-pagination-right {\n      margin-right: 20px !important;\n\n      li {\n        border-radius: 8px;\n\n        &.ant-pagination-item-active {\n          background: #0052cc !important;\n\n          a {\n            color: #ffffff !important;\n          }\n        }\n\n        a {\n          font-family: \"Work Sans\", sans-serif;\n          font-style: normal;\n          font-weight: normal;\n          font-size: 15px;\n          text-align: center;\n        }\n      }\n    }\n  }\n\n  table {\n    background-color: #edf2f7;\n\n    thead {\n      tr {\n        th {\n          font-family: DM Sans;\n          font-style: normal;\n          font-weight: bold;\n          font-size: 12px;\n          line-height: 20px;\n          letter-spacing: 1px;\n          text-transform: uppercase;\n          background: #ffffff;\n          color: #8f92a1;\n        }\n      }\n    }\n    tbody {\n      background: #ffffff;\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n      tr {\n        td {\n          font-family: DM Sans;\n          font-weight: bold;\n          font-size: 13px;\n          color: #171717;\n\n          padding-top: 10px;\n          padding-bottom: 10px;\n\n          span.date {\n            font-family: DM Sans;\n            font-style: normal;\n            font-weight: bold;\n            font-size: 12px;\n            line-height: 20px;\n            text-align: right;\n            letter-spacing: 1px;\n            text-transform: uppercase;\n            color: #8f92a1;\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst TableWrapper = styled(Table)``;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"antd/dist/antd.css\";\nimport { SocketContextProvider } from \"./socket\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SocketContextProvider>\n      <App />\n    </SocketContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}